% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/on_platform.R
\name{.PlatformAuth}
\alias{.PlatformAuth}
\title{Auth implementation for user apps API use only}
\description{
Auth implementation for user apps API use only

Auth implementation for user apps API use only
}
\section{Super class}{
\code{\link[datalabSDK:BaseAuth]{datalabSDK::BaseAuth}} -> \code{PlatformAuth}
}
\section{Methods}{
\subsection{Public methods}{
\itemize{
\item \href{#method-new}{\code{.PlatformAuth$new()}}
\item \href{#method-get_token}{\code{.PlatformAuth$get_token()}}
\item \href{#method-is_valid}{\code{.PlatformAuth$is_valid()}}
\item \href{#method-clone}{\code{.PlatformAuth$clone()}}
}
}
\if{html}{
\out{<details open ><summary>Inherited methods</summary>}
\itemize{
\item \out{<span class="pkg-link" data-pkg="datalabSDK" data-topic="BaseAuth" data-id=".is_in_time">}\href{../../datalabSDK/html/BaseAuth.html#method-.is_in_time}{\code{datalabSDK::BaseAuth$.is_in_time()}}\out{</span>}
}
\out{</details>}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-new"></a>}}
\if{latex}{\out{\hypertarget{method-new}{}}}
\subsection{Method \code{new()}}{
Initialise an instance of PlatformAuth
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{.PlatformAuth$new()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
A new PlatformAuth object.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-get_token"></a>}}
\if{latex}{\out{\hypertarget{method-get_token}{}}}
\subsection{Method \code{get_token()}}{
Get token from current call context
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{.PlatformAuth$get_token(session = NULL)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{session}}{The current Shiny session, if using in a Shiny app, otherwise leave empty.}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
A token if available.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-is_valid"></a>}}
\if{latex}{\out{\hypertarget{method-is_valid}{}}}
\subsection{Method \code{is_valid()}}{
Check if access token is valid.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{.PlatformAuth$is_valid(token)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{token}}{The access token.}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
TRUE if the access token is valid.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-clone"></a>}}
\if{latex}{\out{\hypertarget{method-clone}{}}}
\subsection{Method \code{clone()}}{
The objects of this class are cloneable with this method.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{.PlatformAuth$clone(deep = FALSE)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{deep}}{Whether to make a deep clone.}
}
\if{html}{\out{</div>}}
}
}
}
