% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/synchronous_auth.R
\name{.SyncAuth}
\alias{.SyncAuth}
\title{Synchronous form of auth}
\description{
Synchronous form of auth

Synchronous form of auth
}
\details{
Use when need to suspend execution until auth has succeeded (or timed out)
}
\section{Super classes}{
\code{\link[datalabSDK:BaseAuth]{datalabSDK::BaseAuth}} -> \code{\link[datalabSDK:AsyncAuth]{datalabSDK::AsyncAuth}} -> \code{SyncAuth}
}
\section{Methods}{
\subsection{Public methods}{
\itemize{
\item \href{#method-new}{\code{.SyncAuth$new()}}
\item \href{#method-get_token}{\code{.SyncAuth$get_token()}}
\item \href{#method-clone}{\code{.SyncAuth$clone()}}
}
}
\if{html}{
\out{<details open ><summary>Inherited methods</summary>}
\itemize{
\item \out{<span class="pkg-link" data-pkg="datalabSDK" data-topic="BaseAuth" data-id=".is_in_time">}\href{../../datalabSDK/html/BaseAuth.html#method-.is_in_time}{\code{datalabSDK::BaseAuth$.is_in_time()}}\out{</span>}
\item \out{<span class="pkg-link" data-pkg="datalabSDK" data-topic="BaseAuth" data-id="is_valid">}\href{../../datalabSDK/html/BaseAuth.html#method-is_valid}{\code{datalabSDK::BaseAuth$is_valid()}}\out{</span>}
\item \out{<span class="pkg-link" data-pkg="datalabSDK" data-topic="AsyncAuth" data-id="complete_auth_flow">}\href{../../datalabSDK/html/AsyncAuth.html#method-complete_auth_flow}{\code{datalabSDK::AsyncAuth$complete_auth_flow()}}\out{</span>}
\item \out{<span class="pkg-link" data-pkg="datalabSDK" data-topic="AsyncAuth" data-id="start_auth_flow">}\href{../../datalabSDK/html/AsyncAuth.html#method-start_auth_flow}{\code{datalabSDK::AsyncAuth$start_auth_flow()}}\out{</span>}
}
\out{</details>}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-new"></a>}}
\if{latex}{\out{\hypertarget{method-new}{}}}
\subsection{Method \code{new()}}{
Initialise an instance of PlatformAuth
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{.SyncAuth$new(environment)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{environment}}{The environment.}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
A new PlatformAuth object.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-get_token"></a>}}
\if{latex}{\out{\hypertarget{method-get_token}{}}}
\subsection{Method \code{get_token()}}{
Synchronous call to get a token by device flow
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{.SyncAuth$get_token()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
An access token if available.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-clone"></a>}}
\if{latex}{\out{\hypertarget{method-clone}{}}}
\subsection{Method \code{clone()}}{
The objects of this class are cloneable with this method.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{.SyncAuth$clone(deep = FALSE)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{deep}}{Whether to make a deep clone.}
}
\if{html}{\out{</div>}}
}
}
}
