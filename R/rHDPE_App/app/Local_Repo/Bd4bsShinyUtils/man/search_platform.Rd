% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/search_platform.R
\name{search_platform}
\alias{search_platform}
\title{Server module which is used to search the platform}
\usage{
search_platform(input, output, session, filestore_location,
  action_button_label = "Import into shiny app",
  number_files = reactive(NULL), default_search_term = reactive(""),
  default_tags = reactive(""), allow_key_value_filters = TRUE,
  max_number_filters = 4,
  selected_columns_for_results_table = c("Name", "Description", "Tags",
  "Id"))
}
\arguments{
\item{input}{shiny input argument}

\item{output}{shiny output argument}

\item{session}{shiny session argument}

\item{filestore_location}{the location to put extracted files}

\item{action_button_label}{the label for the import button}

\item{number_files}{reactive if NULL then any number of files can be selected for importing, if a number
then the given number of files must be imported}

\item{default_search_term}{reactive string to give a default value to the search term textInput}

\item{default_tags}{reactive comma separated string to give a default value to the tags textInput}

\item{allow_key_value_filters}{logical - if true then key value filters are allowed to be entered by user
for searching, otherwise they not}

\item{max_number_filters}{numeric, the maximum number of key value filters to be shown on the UI
(ignored if allow_key_value_filters is FALSE)}

\item{selected_columns_for_results_table}{a vector of columns chosen from:
"Name", "Description", "Tags", "Id", "Key-Values" and "RepoId" for search/cart results to be shown on the UI
(note this argument does not affect the return value of this module only the output show to users)}
}
\value{
a reactive dataframe of the files last extracted and stored in the file store
or NULL if no files extracted/last file extraction attempted failed.

The dataframe contains the following columns:
Name, Description, Tags, Id and RepoId columns
contains the filenames of the extracted files
}
\description{
This module corresponds to search_platformUI - it is used to search (and then extract)
files from the BD4BS data store and store them in the app's filestore.
}
\details{
If the include_cancel_button argument of the corresponding UI function is set to "actionButton"
then when the Cancel button is pressed Sys.time() is returned (including milliseconds).

We need to be able to fire actions based on a cancel button press and for an action to trigger in Shiny, the button needs to return a value.
The value needs to differ each time, so we use the system time. The actual return value is unimportant.

Setting include_cancel_button to TRUE will use a modalButton and FALSE will not include a cancel button
}
